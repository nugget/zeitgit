#!/bin/sh

VERSION=1.00
ENABLED=$(git config zeitgit.enabled)

if [ "$ENABLED" = "" ] ; then
	echo "Zeitgit not configured!"
	exit 127
fi

if [ "$ENABLED" != "true" ] ; then
	echo "Zeitgit not enabled"
	exit
fi

# Set up some variables based on working environment
ORIGIN=$(git config remote.origin.url) || ORIGIN=orphan
BRANCH=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/') || BRANCH=unknown
EMAIL=$(git config zeitgit.receiveremail)
HOSTNAME=$(hostname)

if [ "$EMAIL" = "" ] ; then
	echo "Zeitgit not configured!"
	exit 127
fi

ORIGPATH=$PWD
# Back through (..) our full cwd until we find the repo base directory with .git/ in it.
while [ "$REPOPATH" = "" ] ; do
	if [ -d $PWD/.git ] ; then
		REPOPATH=$PWD
	fi
	if [ "$PWD" = "/" ] ; then
		REPOPATH=/
	fi
	cd $PWD/..
done
cd $REPOPATH

# Ignore rebase merges
if [ -d $REPOPATH/.git/rebase-merge ] ; then
	exit
fi

FORMAT="ZEITGIT $VERSION%nHOSTNAME $HOSTNAME%nPATH $REPOPATH%nORIGIN $ORIGIN%nBRANCH $BRANCH%nHASH %H%nTREEHASH %T%nPARENTHASH %P%nAUTHORNAME %aN%nAUTHOREMAIL %ae%nAUTHORDATE %at%nCOMMITERNAME %cN%nCOMMITEREMAIL %ce%nCOMMITERDATE %ct%nSUBJECT %s%nBODY %b"

echo "Sending commit data to zeitgit collector at $EMAIL"
git log -C -1 --stat --summary --no-color "--pretty=tformat:$FORMAT" | mail -sgitcommit $EMAIL
